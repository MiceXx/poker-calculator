{"version":3,"sources":["components/Table/table.png","store/holdem/actions.jsx","components/Holdem/AllCards.jsx","store/table/actions.jsx","components/Holdem/SelectedCards.jsx","components/Table/PokerSeat.jsx","components/Table/TableMenu.jsx","components/Table/CommunityCards.jsx","components/Table/PokerTable.jsx","components/Holdem/HoldemCalculator.jsx","components/Navigation.jsx","App.jsx","serviceWorker.js","constants.js","helpers.js","store/holdem/reducer.jsx","store/table/reducer.jsx","store/root-reducer.jsx","app-helper.js","index.jsx"],"names":["module","exports","__webpack_require__","p","SELECT_CARD","UNSELECT_CARD","DEAL_CARDS","SELECT_COMMUNITY_CARD","UNSELECT_COMMUNITY_CARD","unselectCard","card","position","type","AllCards_style","color","backgroundColor","connect","state","availableCards","holdem","dealingPosition","table","dispatch","selectCard","props","react_default","a","createElement","Segment","textAlign","style","className","map","key","alt","src","concat","onClick","SELECT_PLAYER_SEAT","SELECT_DEALER_POSITION","SELECT_NEXT_DEALER","ADD_PLAYER","REMOVE_PLAYER","SELECT_DEALING_POSITION","selectDealingPosition","SelectedCards_style","header","marginTop","marginBottom","selectedCards","winPercent","cards","Header","as","content","i","PokerSeat_style","segment","minWidth","maxWidth","minHeight","maxHeight","label","left","top","smallButton","fontSize","PokerTable","_this$props","this","dealerPosition","numberPlayers","Label","floating","size","_this$props2","selectedSeat","selectPlayerSeat","disabled","Button","circular","icon","basic","getRibbon","Holdem_SelectedCards","React","Component","selectDealerPosition","TableMenu_style","borderRadius","width","seats","selectNextDealer","addPlayer","removePlayer","Group","vertical","labeled","primary","positive","CommunityCards_style","main","communityCards","PokerTable_style","container","background","require","backgroundSize","containerRow","display","justifyContent","containerMiddle","containerDiv","padding","Container","seat","PokerSeat","Table_CommunityCards","Table_TableMenu","HoldemCalculator","Table_PokerTable","Holdem_AllCards","navOptions","to","name","SimpleBottomNavigation","handleItemClick","e","_ref","_this","setState","activeItem","_this2","Menu","fluid","widths","inverted","item","Item","Object","assign","Link","Route","exact","path","component","HoldEmCalculator","App","BrowserRouter","Navigation","Boolean","window","location","hostname","match","CARD_RANKS","ALL_CARDS","sortAndFilter","arr","filter","v","indexOf","sort","sortCards","b","includes","rankMap","A","2","3","4","5","6","7","8","9","1","J","Q","K","a_suit","charAt","length","b_suit","a_rank","b_rank","suitComp","localeCompare","forEach","suit","rank","push","initialState","toConsumableArray","rootReducer","combineReducers","arguments","undefined","action","newArr","newArrCom","slice","c","splice","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.997ec1fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/table.ccbe5c44.png\";","\r\nexport const SELECT_CARD = 'SELECT_CARD';\r\nexport const UNSELECT_CARD = 'UNSELECT_CARD';\r\nexport const DEAL_CARDS = 'DEAL_CARDS';\r\nexport const SELECT_COMMUNITY_CARD = 'SELECT_COMMUNITY_CARD';\r\nexport const UNSELECT_COMMUNITY_CARD = 'UNSELECT_COMMUNITY_CARD';\r\n\r\nexport function selectCard(card, position) {\r\n    if (position === -1) {\r\n        return {\r\n            type: SELECT_COMMUNITY_CARD,\r\n            card,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            type: SELECT_CARD,\r\n            card,\r\n            position,\r\n        };\r\n    }\r\n}\r\nexport function unselectCard(card, position) {\r\n    if (position === -1) {\r\n        return {\r\n            type: UNSELECT_COMMUNITY_CARD,\r\n            card,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            type: UNSELECT_CARD,\r\n            card,\r\n            position,\r\n        };\r\n    }\r\n}\r\n\r\nexport function dealCards() {\r\n    return { type: DEAL_CARDS };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport { selectCard } from '../../store/holdem/actions';\r\n\r\nconst AllCards_style = {\r\n    color: {\r\n        backgroundColor: 'rgb(169, 236, 248)'\r\n    },\r\n}\r\n\r\nfunction AllCards(props) {\r\n    const { availableCards, selectCard, dealingPosition } = props;\r\n\r\n    return (\r\n        <Segment textAlign='center' style={AllCards_style.color}>\r\n            <div className=\"hand hhand-compact active-hand\">\r\n                {availableCards.map(card => (\r\n                    <img\r\n                        key={card}\r\n                        alt=''\r\n                        src={`/images/cards/${card}.svg`}\r\n                        className='card'\r\n                        onClick={() => selectCard(card, dealingPosition)} />\r\n                ))}\r\n            </div>\r\n        </Segment >\r\n    );\r\n}\r\n\r\nAllCards.propTypes = {\r\n    availableCards: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        availableCards: state.holdem.availableCards,\r\n        dealingPosition: state.table.dealingPosition,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectCard: (card, position) => dispatch(selectCard(card, position)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCards);","\r\nexport const SELECT_PLAYER_SEAT = 'SELECT_PLAYER_SEAT';\r\nexport const SELECT_DEALER_POSITION = 'SELECT_DEALER_POSITION';\r\nexport const SELECT_NEXT_DEALER = 'SELECT_NEXT_DEALER';\r\nexport const ADD_PLAYER = 'ADD_PLAYER';\r\nexport const REMOVE_PLAYER = 'REMOVE_PLAYER';\r\nexport const SELECT_DEALING_POSITION = 'SELECT_DEALING_POSITION';\r\n\r\nexport function selectPlayerSeat(position) {\r\n    return { type: SELECT_PLAYER_SEAT, position };\r\n}\r\n\r\nexport function selectDealerPosition(position) {\r\n    return { type: SELECT_DEALER_POSITION, position };\r\n}\r\n\r\nexport function selectNextDealer() {\r\n    return { type: SELECT_NEXT_DEALER };\r\n}\r\n\r\nexport function addPlayer() {\r\n    return { type: ADD_PLAYER };\r\n}\r\n\r\nexport function removePlayer() {\r\n    return { type: REMOVE_PLAYER };\r\n}\r\n\r\nexport function selectDealingPosition(position) {\r\n    return { type: SELECT_DEALING_POSITION, position };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { unselectCard } from '../../store/holdem/actions';\r\n\r\nconst SelectedCards_style = {\r\n    header: {\r\n        marginTop: '2px',\r\n        marginBottom: '2px',\r\n    }\r\n};\r\n\r\nfunction SelectedCards(props) {\r\n    const { unselectCard, winPercent, cards, position } = props;\r\n    return (\r\n        <div>\r\n            <Header as=\"h3\" content={`Win: ${winPercent}`} style={SelectedCards_style.header} />\r\n            <div className=\"hand active-hand\">\r\n                {cards.map((card, i) => (\r\n                    <img\r\n                        className='card'\r\n                        key={`${card}${i}`}\r\n                        src={`/images/cards/${card}.svg`}\r\n                        onClick={() => unselectCard(card, position)}\r\n                        alt='' />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSelectedCards.propTypes = {\r\n    selectedCards: PropTypes.array.isRequired,\r\n    winPercent: PropTypes.string.isRequired,\r\n    cards: PropTypes.array.isRequired,\r\n    position: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedCards: state.holdem.selectedCards,\r\n        winPercent: state.holdem.winPercent,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        unselectCard: (card, position) => dispatch(unselectCard(card, position)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedCards);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Label, Button } from 'semantic-ui-react';\r\nimport { selectPlayerSeat, selectDealerPosition, selectDealingPosition } from '../../store/table/actions';\r\nimport { connect } from 'react-redux';\r\nimport SelectedCards from '../Holdem/SelectedCards';\r\n\r\nconst PokerSeat_style = {\r\n    segment: {\r\n        minWidth: '170px',\r\n        maxWidth: '170px',\r\n        minHeight: '180px',\r\n        maxHeight: '168px',\r\n    },\r\n    label: {\r\n        left: '95%',\r\n        top: '-0.5em',\r\n    },\r\n    smallButton: {\r\n        fontSize: '8px',\r\n    },\r\n}\r\n\r\nclass PokerTable extends React.Component {\r\n    getRibbon() {\r\n        const { dealerPosition, position, numberPlayers } = this.props;\r\n        if (dealerPosition % numberPlayers === position) {\r\n            return <Label\r\n                floating\r\n                style={PokerSeat_style.label}\r\n                size='mini'\r\n                content='Dealer'\r\n                color='blue'\r\n            />\r\n        }\r\n        if ((dealerPosition + 1) % numberPlayers === position) {\r\n            return <Label\r\n                floating\r\n                style={PokerSeat_style.label}\r\n                size='mini'\r\n                content='SB'\r\n                color='teal'\r\n            />\r\n        }\r\n        if ((dealerPosition + 2) % numberPlayers === position) {\r\n            return <Label\r\n                floating\r\n                style={PokerSeat_style.label}\r\n                size='mini'\r\n                content='BB'\r\n                color='green'\r\n            />\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const {\r\n            selectedSeat,\r\n            position,\r\n            numberPlayers,\r\n            selectPlayerSeat,\r\n            selectedCards,\r\n            dealingPosition,\r\n            selectDealingPosition, } = this.props;\r\n        return (\r\n            <Segment disabled={position >= numberPlayers} style={PokerSeat_style.segment}>\r\n                <Button\r\n                    circular\r\n                    size='mini'\r\n                    icon={selectedSeat === position ? 'user' : null}\r\n                    disabled={position > numberPlayers - 1}\r\n                    basic={selectedSeat !== position}\r\n                    color={selectedSeat === position ? 'green' : 'grey'}\r\n                    content={`Seat ${position}`}\r\n                    onClick={() => selectPlayerSeat(position)} />\r\n                {this.getRibbon()}\r\n                <SelectedCards cards={selectedCards[position]} position={position} />\r\n                <Button\r\n                    circular\r\n                    size=\"mini\"\r\n                    icon=\"star\"\r\n                    style={PokerSeat_style.smallButton}\r\n                    color={dealingPosition === position ? \"yellow\" : null}\r\n                    onClick={() => selectDealingPosition(position)} />\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\nPokerTable.propTypes = {\r\n    position: PropTypes.number.isRequired,\r\n    selectedSeat: PropTypes.number.isRequired,\r\n    dealerPosition: PropTypes.number.isRequired,\r\n    numberPlayers: PropTypes.number.isRequired,\r\n    selectedCards: PropTypes.array.isRequired,\r\n    dealingPosition: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedSeat: state.table.selectedSeat,\r\n        dealerPosition: state.table.dealerPosition,\r\n        dealingPosition: state.table.dealingPosition,\r\n        numberPlayers: state.table.numberPlayers,\r\n        selectedCards: state.holdem.selectedCards,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectPlayerSeat: position => dispatch(selectPlayerSeat(position)),\r\n        selectDealerPosition: position => dispatch(selectDealerPosition(position)),\r\n        selectDealingPosition: position => dispatch(selectDealingPosition(position)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokerTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { selectNextDealer, addPlayer, removePlayer } from '../../store/table/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TableMenu_style = {\r\n    table: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        position: 'absolute',\r\n        top: '5px',\r\n        left: '5px',\r\n        width: '135px',\r\n    }\r\n}\r\n\r\nfunction TableMenu(props) {\r\n    const { selectNextDealer, addPlayer, removePlayer, numberPlayers } = props;\r\n    return (\r\n        <Button.Group vertical labeled icon size='mini' style={TableMenu_style.table}>\r\n            <Button\r\n                onClick={selectNextDealer}\r\n                primary\r\n                icon='redo'\r\n                content='Move Button' />\r\n            <Button\r\n                onClick={selectNextDealer}\r\n                color='pink'\r\n                icon='play'\r\n                disabled\r\n                content='Deal' />\r\n            <Button\r\n                onClick={addPlayer}\r\n                positive\r\n                disabled={numberPlayers >= 9}\r\n                icon='plus'\r\n                content='Add Player' />\r\n            <Button\r\n                onClick={removePlayer}\r\n                disabled={numberPlayers <= 2}\r\n                color='red'\r\n                icon='minus'\r\n                content='Remove Player' />\r\n        </Button.Group>\r\n    );\r\n}\r\n\r\nTableMenu.propTypes = {\r\n    seats: PropTypes.array.isRequired,\r\n    numberPlayers: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        seats: state.table.seats,\r\n        numberPlayers: state.table.numberPlayers,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectNextDealer: () => dispatch(selectNextDealer()),\r\n        addPlayer: () => dispatch(addPlayer()),\r\n        removePlayer: () => dispatch(removePlayer()),\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableMenu);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { unselectCard } from '../../store/holdem/actions';\r\nimport { selectDealingPosition } from '../../store/table/actions';\r\n\r\nconst CommunityCards_style = {\r\n    main: {\r\n        position: 'relative',\r\n        top: '40px',\r\n    },\r\n    smallButton: {\r\n        fontSize: '8px',\r\n    },\r\n};\r\n\r\nfunction CommunityCards(props) {\r\n    const { unselectCard,\r\n        communityCards,\r\n        selectDealingPosition,\r\n        dealingPosition } = props;\r\n    return (\r\n        <div style={CommunityCards_style.main}>\r\n            <div className=\"hand  active-hand\">\r\n                {communityCards.map((card, i) => (\r\n                    <img\r\n                        className='card'\r\n                        key={`${card}${i}`}\r\n                        src={`/images/cards/${card}.svg`}\r\n                        onClick={() => unselectCard(card, -1)}\r\n                        alt='' />\r\n                ))}\r\n            </div>\r\n\r\n            <Button\r\n                circular\r\n                size=\"mini\"\r\n                icon=\"star\"\r\n                style={CommunityCards_style.smallButton}\r\n                color={dealingPosition === -1 ? \"yellow\" : null}\r\n                onClick={() => selectDealingPosition(-1)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nCommunityCards.propTypes = {\r\n    communityCards: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dealingPosition: state.table.dealingPosition,\r\n        communityCards: state.holdem.communityCards,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        unselectCard: (card, position) => dispatch(unselectCard(card, position)),\r\n        selectDealingPosition: position => dispatch(selectDealingPosition(position)),\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunityCards);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Container } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport PokerSeat from './PokerSeat';\r\nimport TableMenu from './TableMenu';\r\nimport CommunityCards from './CommunityCards';\r\n\r\nconst PokerTable_style = {\r\n    container: {\r\n        backgroundColor: 'grey',\r\n        minWidth: '1030px',\r\n    },\r\n    segment: {\r\n        background: `url(${require('./table.png')}) center no-repeat`,\r\n        backgroundSize: '90%',\r\n    },\r\n    containerRow: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    containerMiddle: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    containerDiv: {\r\n        display: 'inline-block',\r\n        padding: '5px',\r\n    },\r\n    smallButton: {\r\n        fontSize: '8px',\r\n    },\r\n}\r\n\r\nfunction PokerTable(props) {\r\n    return (\r\n        <Container textAlign='center' style={PokerTable_style.container}>\r\n            <Segment style={PokerTable_style.segment}>\r\n                <div style={PokerTable_style.containerRow}>\r\n                    {[0, 1, 2, 3].map(seat => (\r\n                        <div\r\n                            key={`seat${seat}`}\r\n                            style={PokerTable_style.containerDiv}>\r\n                            <PokerSeat\r\n                                position={seat} />\r\n                        </div>\r\n                    )\r\n                    )}\r\n                </div>\r\n                <div style={PokerTable_style.containerMiddle}>\r\n                    <div key={'seat8'} style={PokerTable_style.containerDiv}>\r\n                        <PokerSeat\r\n                            position={8} />\r\n                    </div>\r\n                    <CommunityCards />\r\n                    <div key={'seat4'} style={PokerTable_style.containerDiv}>\r\n                        <PokerSeat\r\n                            position={4} />\r\n                    </div>\r\n                </div>\r\n                <div style={PokerTable_style.containerRow}>\r\n                    {[7, 6, 5].map(seat => (\r\n                        <div key={`seat${seat}`} style={PokerTable_style.containerDiv}>\r\n                            <PokerSeat\r\n                                position={seat} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <TableMenu />\r\n            </Segment>\r\n        </Container>\r\n    );\r\n}\r\n\r\nPokerTable.propTypes = {\r\n    seats: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        seats: state.table.seats,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokerTable);","import React from 'react';\r\nimport AllCards from './AllCards';\r\nimport PokerTable from '../Table/PokerTable';\r\n\r\n\r\nfunction HoldemCalculator() {\r\n    return (\r\n        <div>\r\n            <PokerTable />\r\n            <AllCards />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HoldemCalculator;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport HoldEmCalculator from './Holdem/HoldemCalculator';\r\n\r\nconst navOptions = [\r\n    {\r\n        key: 'holdem',\r\n        to: '/holdem',\r\n        name: 'Holdem',\r\n    },\r\n    {\r\n        key: 'omaha',\r\n        to: '/omaha',\r\n        name: 'Omaha',\r\n    },\r\n];\r\n\r\nclass SimpleBottomNavigation extends React.Component {\r\n    state = {};\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Menu fluid widths={4} inverted>\r\n                    {navOptions.map(item => <Menu.Item\r\n                        as={Link}\r\n                        {...item}\r\n                        onClick={this.handleItemClick} />\r\n                    )}\r\n                </Menu>\r\n                <Route exact path=\"/\" component={HoldEmCalculator} />\r\n                <Route path=\"/holdem\" component={HoldEmCalculator} />\r\n                <Route path=\"/omaha\" component={HoldEmCalculator} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SimpleBottomNavigation;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navigation from './components/Navigation';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Navigation />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const CARD_RANKS = [\r\n    'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K',\r\n];\r\n\r\nexport const CARD_SUITS = [\r\n    'S', 'H', 'D', 'C',\r\n];\r\n\r\nexport const ALL_CARDS = [];\r\n\r\nexport const ALL_SEATS = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nCARD_SUITS.forEach(suit => CARD_RANKS.map(rank => ALL_CARDS.push(`${rank}${suit}`)));\r\n","\r\nexport function sortAndFilter(arr) {\r\n    return arr.filter((v, i, a) => a.indexOf(v) === i).sort(sortCards);\r\n}\r\n\r\nfunction sortCards(a, b) {\r\n    if (a.includes('Back')) return -1;\r\n    if (b.includes('Back')) return 1;\r\n    const rankMap = {\r\n        A: 1,\r\n        2: 2,\r\n        3: 3,\r\n        4: 4,\r\n        5: 5,\r\n        6: 6,\r\n        7: 7,\r\n        8: 8,\r\n        9: 9,\r\n        1: 10,\r\n        J: 11,\r\n        Q: 12,\r\n        K: 13\r\n    }\r\n    const a_suit = a.charAt(a.length - 1);\r\n    const b_suit = b.charAt(b.length - 1);\r\n    let a_rank = a.charAt(0);\r\n    let b_rank = b.charAt(0);\r\n    let suitComp = b_suit.localeCompare(a_suit);\r\n    if (suitComp !== 0) return suitComp;\r\n    return rankMap[a_rank] > rankMap[b_rank];\r\n}","\r\nimport { ALL_CARDS } from '../../constants';\r\n\r\nimport {\r\n    SELECT_CARD,\r\n    UNSELECT_CARD,\r\n    DEAL_CARDS,\r\n    SELECT_COMMUNITY_CARD,\r\n    UNSELECT_COMMUNITY_CARD,\r\n} from './actions';\r\n\r\nimport { sortAndFilter } from '../../helpers';\r\n\r\nconst initialState = {\r\n    availableCards: ['Red_Back', ...ALL_CARDS],\r\n    selectedCards: [['Red_Back', 'Red_Back'],\r\n    ['Red_Back', 'Red_Back'],\r\n    ['Red_Back', 'Red_Back'],\r\n    ['Red_Back', 'Red_Back'],\r\n    ['Red_Back', 'Red_Back'],\r\n    ['Red_Back', 'Red_Back'],\r\n    [],\r\n    ['Red_Back', 'Red_Back'],\r\n    ['Red_Back', 'Red_Back']],\r\n    communityCards: [],\r\n    winPercent: '',\r\n}\r\n\r\nexport default function holdem(state = Object.assign({}, initialState), action) {\r\n    const { position, card } = action;\r\n    const { selectedCards, availableCards, communityCards } = state;\r\n    let newArr = [];\r\n    let newArrCom = communityCards.slice();\r\n    selectedCards.forEach((c, i) => newArr[i] = c.slice());\r\n    switch (action.type) {\r\n        case SELECT_CARD:\r\n            newArr[position].push(card);\r\n            if (selectedCards[position].length < 2) {\r\n                if (card.includes('Back')) return Object.assign({}, state, { selectedCards: newArr });\r\n                return Object.assign({}, state, {\r\n                    availableCards: availableCards.filter(item => item !== card),\r\n                    selectedCards: newArr\r\n                });\r\n            }\r\n            return state;\r\n        case UNSELECT_CARD:\r\n            newArr[position].splice(newArr[position].indexOf(card), 1);\r\n            if (card.includes('Back')) {\r\n                return Object.assign({}, state, {\r\n                    selectedCards: newArr\r\n                });\r\n            }\r\n            return Object.assign({}, state, {\r\n                availableCards: sortAndFilter([...availableCards, card]),\r\n                selectedCards: newArr\r\n            });\r\n        case SELECT_COMMUNITY_CARD:\r\n            newArrCom.push(card);\r\n            if (card.includes('Back')) return Object.assign({}, state, { communityCards: newArrCom });\r\n            if (communityCards.length < 5) {\r\n                return Object.assign({}, state, {\r\n                    availableCards: availableCards.filter(item => item !== card),\r\n                    communityCards: newArrCom\r\n                });\r\n            }\r\n            return state;\r\n        case UNSELECT_COMMUNITY_CARD:\r\n            newArrCom.splice(newArrCom.indexOf(card), 1);\r\n            return Object.assign({}, state, {\r\n                availableCards: sortAndFilter([...availableCards, card]),\r\n                communityCards: newArrCom,\r\n            });\r\n        case DEAL_CARDS:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport { ALL_SEATS } from '../../constants';\r\n\r\nimport {\r\n    SELECT_PLAYER_SEAT,\r\n    SELECT_DEALER_POSITION,\r\n    SELECT_NEXT_DEALER,\r\n    ADD_PLAYER,\r\n    REMOVE_PLAYER,\r\n    SELECT_DEALING_POSITION,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    seats: ALL_SEATS,\r\n    numberPlayers: 9,\r\n    selectedSeat: 6,\r\n    dealerPosition: 6,\r\n    dealingPosition: 6,\r\n}\r\n\r\nexport default function table(state = Object.assign({}, initialState), action) {\r\n    switch (action.type) {\r\n        case SELECT_PLAYER_SEAT:\r\n            return Object.assign({}, state, { selectedSeat: action.position });\r\n        case SELECT_DEALER_POSITION:\r\n            return Object.assign({}, state, { dealerPosition: action.dealerPosition });\r\n        case SELECT_NEXT_DEALER:\r\n            return Object.assign({}, state, { dealerPosition: (state.dealerPosition + 1) % state.numberPlayers });\r\n        case ADD_PLAYER:\r\n            if (state.numberPlayers < 9) {\r\n                return Object.assign({}, state, { numberPlayers: state.numberPlayers + 1 });\r\n            }\r\n            return state;\r\n        case REMOVE_PLAYER:\r\n            if (state.numberPlayers > 2) {\r\n                return Object.assign({}, state, { numberPlayers: state.numberPlayers - 1 });\r\n            }\r\n            return state;\r\n        case SELECT_DEALING_POSITION:\r\n            return Object.assign({}, state, { dealingPosition: action.position });\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport holdem from './holdem/reducer.jsx';\r\nimport table from './table/reducer.jsx';\r\n\r\nconst rootReducer = combineReducers({\r\n  holdem,\r\n  table,\r\n});\r\n\r\nexport default rootReducer;\r\n","import thunk from 'redux-thunk';\r\nimport {\r\n    applyMiddleware,\r\n    createStore,\r\n    compose,\r\n} from 'redux';\r\nimport rootReducer from './store/root-reducer';\r\n\r\nconst middleware = process.env.NODE_ENV !== 'production' ?\r\n    [require('redux-immutable-state-invariant').default(), thunk] :\r\n    [thunk];\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(...middleware),\r\n);\r\n\r\nexport const store = createStore(rootReducer, enhancer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { store } from './app-helper';\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}